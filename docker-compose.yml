version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: ecommerce-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-changeme}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-ecommerce}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - ecommerce-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # Application Server
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecommerce-app
    restart: unless-stopped
    environment:
      # Node
      NODE_ENV: production
      PORT: 3001

      # MongoDB (use service name for host)
      MONGODB_URI: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-changeme}@mongodb:27017/${MONGO_DB_NAME:-ecommerce}?authSource=admin

      # JWT
      JWT_SECRET: ${JWT_SECRET}

      # Stripe
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}

      # Cloudinary
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}

      # Resend (Email)
      RESEND_API_KEY: ${RESEND_API_KEY}
      CONTACT_EMAIL: ${CONTACT_EMAIL}

      # Shippo (Shipping)
      SHIPPO_API_KEY: ${SHIPPO_API_KEY}

      # Sentry (Error Tracking)
      SENTRY_DSN: ${SENTRY_DSN}

      # CORS
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3001}
    ports:
      - "${APP_PORT:-3001}:3001"
    volumes:
      # Mount logs directory for persistence
      - app_logs:/app/logs
    networks:
      - ecommerce-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  # (Optional) MongoDB Express - Database Admin UI
  # Uncomment to enable web-based MongoDB management
  # mongo-express:
  #   image: mongo-express:latest
  #   container_name: ecommerce-mongo-express
  #   restart: unless-stopped
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER:-admin}
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-changeme}
  #     ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-changeme}@mongodb:27017/
  #     ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER:-admin}
  #     ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD:-changeme}
  #   ports:
  #     - "8081:8081"
  #   networks:
  #     - ecommerce-network
  #   depends_on:
  #     - mongodb

# Persistent data volumes
volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  app_logs:
    driver: local

# Network
networks:
  ecommerce-network:
    driver: bridge
